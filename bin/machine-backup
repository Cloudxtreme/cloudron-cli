#!/usr/bin/env node

'use strict';

require('../src/common.js');

var program = require('commander'),
    actions = require('../src/machine/actions.js');

program.version(require('../package.json').version);

program.command('create <domain>')
    .description('Create new backup')
    .option('-u, --username <username>', 'Username')
    .option('-p, --password <password>', 'Password (unsafe)')
    .option('--ssh-key <ssh key>', 'SSH key')
    .option('--ssh-user <ssh user>', 'SSH user')
    .action(actions.createBackup);

program.command('list <domain>')
    .description('List all backups')
    .option('-u, --username <username>', 'Username')
    .option('-p, --password <password>', 'Password (unsafe)')
    .option('--provider <provider>', 'Provider fallback [caas,ec2]')
    .option('--region <region>', 'AWS region')
    .option('--access-key-id <accessKeyId>', 'AWS accessKeyId')
    .option('--secret-access-key <secretAccessKey>', 'AWS secretAccessKey')
    .option('--backup-bucket <backupBucket>', 'S3 backupBucket')
    .action(actions.listBackups);

if (!process.argv.slice(2).length) {
    program.outputHelp();
} else { // https://github.com/tj/commander.js/issues/338
    // deal first with global flags!
    program.parse(process.argv);

    var knownCommand = program.commands.some(function (command) { return command._name === process.argv[2] || command._alias === process.argv[2]; });
    if (!knownCommand) {
        console.error('Unknown command: ' + process.argv[2]);
        process.exit(1);
    }
    return;
}

program.parse(process.argv);
